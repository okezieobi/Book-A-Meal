{"version":3,"sources":["../../models/index.js"],"names":["BookAMeal","Meal","mealOptionList","data","mealOptionData","id","mealId","name","mealOptionName","price","mealOptionPrice","Menu","menuList","optionOneArray","optionTwoArray","total","forEach","optionOne","optionTwo","menuData","date","Date","menuId","menuName","mealOptions","menuOptions","split","totalPrice","Order","orderList","orderData","orderId","customer","customerName","menu","meals","menus","orders"],"mappings":";;;;;;;;;;;;;;IAAMA,S;;;;IAEAC,I;;;AACJ,kBAAc;AAAA;;AAAA;;AAEZ,UAAKC,cAAL,GAAsB,EAAtB;AAFY;AAGb;;;;+BAEUC,I,EAAM;AACf,WAAKC,cAAL,GAAsB;AACpBC,YAAIF,KAAKG,MADW;AAEpBC,cAAMJ,KAAKK,cAFS;AAGpBC,eAAON,KAAKO;AAHQ,OAAtB;AAKA,aAAO,KAAKN,cAAZ;AACD;;;;EAbgBJ,S;;IAgBbW,I;;;AACJ,kBAAc;AAAA;;AAAA;;AAEZ,WAAKC,QAAL,GAAgB,EAAhB;AAFY;AAGb;;;;+BAEUC,c,EAAgBC,c,EAAgB;AAAA;;AACzC,WAAKC,KAAL,GAAa,CAAb;AACAF,qBAAeG,OAAf,CAAuB,UAACC,SAAD,EAAe;AACpCH,uBAAeE,OAAf,CAAuB,UAACE,SAAD,EAAe;AACpC,cAAID,cAAcC,UAAUX,IAA5B,EAAkC;AAChC,mBAAKQ,KAAL,IAAcG,UAAUH,KAAxB;AACD;AACF,SAJD;AAKD,OAND;AAOA,aAAO,KAAKA,KAAZ;AACD;;;+BAEUZ,I,EAAM;AACf,WAAKgB,QAAL,GAAgB;AACdC,cAAM,IAAIC,IAAJ,EADQ;AAEdhB,YAAIF,KAAKmB,MAFK;AAGdf,cAAMJ,KAAKoB,QAHG;AAIdC,qBAAarB,KAAKsB,WAAL,CAAiBC,KAAjB,CAAuB,GAAvB,CAJC;AAKdX,eAAO,KAAKY,UAAL,CAAgBxB,KAAKsB,WAAL,CAAiBC,KAAjB,CAAuB,GAAvB,CAAhB,EAA6C,KAAKxB,cAAlD;AALO,OAAhB;AAOA,aAAO,KAAKiB,QAAZ;AACD;;;;EA3BgBlB,I;;IA+Bb2B,K;;;AACJ,mBAAc;AAAA;;AAAA;;AAEZ,WAAKC,SAAL,GAAiB,EAAjB;AAFY;AAGb;;;;gCAEW1B,I,EAAM;AAChB,WAAK2B,SAAL,GAAiB;AACfzB,YAAIF,KAAK4B,OADM;AAEfC,kBAAU7B,KAAK8B,YAFA;AAGfC,cAAM/B,KAAKS,QAAL,CAAcc,KAAd,CAAoB,GAApB,CAHS;AAIfX,eAAO,KAAKY,UAAL,CAAgBxB,KAAKS,QAAL,CAAcc,KAAd,CAAoB,GAApB,CAAhB,EAA0C,KAAKd,QAA/C;AAJQ,OAAjB;AAMA,aAAO,KAAKkB,SAAZ;AACD;;;;EAdiBnB,I;;AAiBpB,IAAMwB,QAAQ,IAAIlC,IAAJ,EAAd;AACA,IAAMmC,QAAQ,IAAIzB,IAAJ,EAAd;AACA,IAAM0B,SAAS,IAAIT,KAAJ,EAAf;;kBAEe;AACbO,cADa;AAEbC,cAFa;AAGbC;AAHa,C","file":"index.js","sourcesContent":["class BookAMeal {}\n\nclass Meal extends BookAMeal {\n  constructor() {\n    super();\n    this.mealOptionList = [];\n  }\n\n  mealFormat(data) {\n    this.mealOptionData = {\n      id: data.mealId,\n      name: data.mealOptionName,\n      price: data.mealOptionPrice,\n    };\n    return this.mealOptionData;\n  }\n}\n\nclass Menu extends Meal {\n  constructor() {\n    super();\n    this.menuList = [];\n  }\n\n  totalPrice(optionOneArray, optionTwoArray) {\n    this.total = 0;\n    optionOneArray.forEach((optionOne) => {\n      optionTwoArray.forEach((optionTwo) => {\n        if (optionOne === optionTwo.name) {\n          this.total += optionTwo.total;\n        }\n      });\n    });\n    return this.total;\n  }\n\n  menuFormat(data) {\n    this.menuData = {\n      date: new Date(),\n      id: data.menuId,\n      name: data.menuName,\n      mealOptions: data.menuOptions.split(' '),\n      total: this.totalPrice(data.menuOptions.split(' '), this.mealOptionList),\n    };\n    return this.menuData;\n  }\n}\n\n\nclass Order extends Menu {\n  constructor() {\n    super();\n    this.orderList = [];\n  }\n\n  orderFormat(data) {\n    this.orderData = {\n      id: data.orderId,\n      customer: data.customerName,\n      menu: data.menuList.split(' '),\n      total: this.totalPrice(data.menuList.split(' '), this.menuList),\n    };\n    return this.orderData;\n  }\n}\n\nconst meals = new Meal();\nconst menus = new Menu();\nconst orders = new Order();\n\nexport default {\n  meals,\n  menus,\n  orders,\n};\n"]}