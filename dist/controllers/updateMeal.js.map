{"version":3,"sources":["../../controllers/updateMeal.js"],"names":["bookAMeal","updateOneMealOption","req","res","testUpadateMeal","services","testItem","body","mealOptionName","mealOptionPrice","test","findMeal","findOne","params","data","mealOptionList","updateOneRes","mealFormat","id","createOneRes","processErr400","mustBeNumbersErr"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEAA,eAAUC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,eADwB,GACNC,kBAASC,QAAT,CAAkBJ,GAAG,CAACK,IAAJ,CAASC,cAA3B,EAA2CN,GAAG,CAACK,IAAJ,CAASE,eAApD,EAAsE,aAAD,CAAgBC,IAAhB,CAAqBR,GAAG,CAACK,IAAJ,CAASC,cAA9B,CAArE,EAAqH,UAAD,CAAaE,IAAb,CAAkBR,GAAG,CAACK,IAAJ,CAASE,eAA3B,CAApH,CADM;;AAAA,iBAE1BL,eAF0B;AAAA;AAAA;AAAA;;AAGtBO,YAAAA,QAHsB,GAGXN,kBAASO,OAAT,CAAiBV,GAAG,CAACW,MAArB,EAA6BC,gBAAKC,cAAlC,CAHW;;AAAA,iBAIxBJ,QAJwB;AAAA;AAAA;AAAA;;AAK1BN,8BAASW,YAAT,CAAsBb,GAAtB,EAA2BW,gBAAKC,cAAhC,EAAgDD,gBAAKG,UAAL,CAAgBf,GAAG,CAACK,IAApB,CAAhD,EAA2E,qDAA3E,EAAkII,QAAQ,CAACO,EAA3I;;AAL0B;;AAAA;AAQ5Bb,8BAASc,YAAT,CAAsBhB,GAAtB,EAA2BW,gBAAKC,cAAhC,EAAgDD,gBAAKG,UAAL,CAAgBf,GAAG,CAACK,IAApB,CAAhD,EAA2E,yDAA3E;;AAR4B;;AAAA;AAW9BF,8BAASe,aAAT,CAAuBlB,GAAG,CAACK,IAAJ,CAASC,cAAhC,EAAgDN,GAAG,CAACK,IAAJ,CAASE,eAAzD,EAA0E,kBAA1E,EAA8F,mBAA9F,EAAmHJ,kBAASgB,gBAAT,CAA0B,mBAA1B,CAAnH,EAAmKlB,GAAnK;;AAX8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA;;eAceH,eAAUC,mB","sourcesContent":["import data from '../models';\nimport services from '../services';\n// @ts-ignore\nimport bookAMeal from './index';\n\nbookAMeal.updateOneMealOption = async (req, res) => {\n  const testUpadateMeal = services.testItem(req.body.mealOptionName, req.body.mealOptionPrice, (/^[A-Za-z]+$/).test(req.body.mealOptionName), (/^[0-9]+$/).test(req.body.mealOptionPrice));\n  if (testUpadateMeal) {\n    const findMeal = services.findOne(req.params, data.mealOptionList);\n    if (findMeal) {\n      services.updateOneRes(res, data.mealOptionList, data.mealFormat(req.body), 'Meal option found! Meal option successfully updated', findMeal.id);\n      return;\n    }\n    services.createOneRes(res, data.mealOptionList, data.mealFormat(req.body), 'Meal option not found! Meal option successfully created');\n    return;\n  }\n  services.processErr400(req.body.mealOptionName, req.body.mealOptionPrice, 'Meal option name', 'Meal option price', services.mustBeNumbersErr('Meal option price'), res);\n};\n\nexport default bookAMeal.updateOneMealOption;\n"],"file":"updateMeal.js"}