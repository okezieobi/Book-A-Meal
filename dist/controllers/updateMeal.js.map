{"version":3,"sources":["../../controllers/updateMeal.js"],"names":["bookAMeal","updateOneMealOption","req","res","testUpadateMeal","services","testItem","body","mealOptionName","mealOptionPrice","test","findMeal","findOne","params","data","mealOptionList","resAction","updateOneRes","mealFormat","id","createOneRes","sendErr","processErr400","mustBeNumbersErr"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEAA,eAAUC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,eADwB,GACNC,kBAASC,QAAT,CAAkBJ,GAAG,CAACK,IAAJ,CAASC,cAA3B,EAA2CN,GAAG,CAACK,IAAJ,CAASE,eAApD,EAAsE,aAAD,CAAgBC,IAAhB,CAAqBR,GAAG,CAACK,IAAJ,CAASC,cAA9B,CAArE,EAAqH,UAAD,CAAaE,IAAb,CAAkBR,GAAG,CAACK,IAAJ,CAASE,eAA3B,CAApH,CADM;AAExBE,YAAAA,QAFwB,GAEbN,kBAASO,OAAT,CAAiBV,GAAG,CAACW,MAArB,EAA6BC,gBAAKC,cAAlC,CAFa;;AAAA,kBAG1BX,eAAe,IAAIO,QAHO;AAAA;AAAA;AAAA;;AAI5BN,8BAASW,SAAT,CAAmB,GAAnB,EAAwBb,GAAxB,EAA6B,qDAA7B,EAAoFE,kBAASY,YAAT,CAAsBH,gBAAKC,cAA3B,EAA2CD,gBAAKI,UAAL,CAAgBhB,GAAG,CAACK,IAApB,CAA3C,EAAsEI,QAAQ,CAACQ,EAA/E,CAApF;;AAJ4B;;AAAA;AAAA,iBAO1Bf,eAP0B;AAAA;AAAA;AAAA;;AAQ5BC,8BAASW,SAAT,CAAmB,GAAnB,EAAwBb,GAAxB,EAA6B,yDAA7B,EAAwFE,kBAASe,YAAT,CAAsBN,gBAAKC,cAA3B,EAA2CD,gBAAKI,UAAL,CAAgBhB,GAAG,CAACK,IAApB,CAA3C,CAAxF;;AAR4B;;AAAA;AAW9BF,8BAASgB,OAAT,CAAiB,GAAjB,EAAsBhB,kBAASiB,aAAT,CAAuBpB,GAAG,CAACK,IAAJ,CAASC,cAAhC,EAAgDN,GAAG,CAACK,IAAJ,CAASE,eAAzD,EAA0E,kBAA1E,EAA8F,mBAA9F,EAAmHJ,kBAASkB,gBAAT,CAA0B,mBAA1B,CAAnH,CAAtB,EAA0LpB,GAA1L;;AAX8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA;;eAceH,eAAUC,mB","sourcesContent":["import data from '../models';\nimport services from '../services';\n// @ts-ignore\nimport bookAMeal from './index';\n\nbookAMeal.updateOneMealOption = async (req, res) => {\n  const testUpadateMeal = services.testItem(req.body.mealOptionName, req.body.mealOptionPrice, (/^[A-Za-z]+$/).test(req.body.mealOptionName), (/^[0-9]+$/).test(req.body.mealOptionPrice));\n  const findMeal = services.findOne(req.params, data.mealOptionList);\n  if (testUpadateMeal && findMeal) {\n    services.resAction(200, res, 'Meal option found! Meal option successfully updated', services.updateOneRes(data.mealOptionList, data.mealFormat(req.body), findMeal.id));\n    return;\n  }\n  if (testUpadateMeal) {\n    services.resAction(201, res, 'Meal option not found! Meal option successfully created', services.createOneRes(data.mealOptionList, data.mealFormat(req.body)));\n    return;\n  }\n  services.sendErr(400, services.processErr400(req.body.mealOptionName, req.body.mealOptionPrice, 'Meal option name', 'Meal option price', services.mustBeNumbersErr('Meal option price')), res);\n};\n\nexport default bookAMeal.updateOneMealOption;\n"],"file":"updateMeal.js"}