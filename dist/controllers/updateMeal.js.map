{"version":3,"sources":["../../controllers/updateMeal.js"],"names":["bookAMeal","updateOneMealOption","req","res","testMeal","body","mealOptionName","mealOptionPrice","test","findMeal","services","findOne","params","data","meals","mealOptionList","mealId","id","updateOne","mealFormat","length","createOne","processErr","mustBeNumbersErr"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEAA,eAAUC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,QADwB,GACZF,GAAG,CAACG,IAAJ,CAASC,cAAT,IAA2BJ,GAAG,CAACG,IAAJ,CAASE,eAApC,IAAwD,aAAD,CAAgBC,IAAhB,CAAqBN,GAAG,CAACG,IAAJ,CAASC,cAA9B,CAAvD,IAAyG,UAAD,CAAaE,IAAb,CAAkBN,GAAG,CAACG,IAAJ,CAASE,eAA3B,CAAzG,IAAyJ,CAACL,GAAG,CAACG,IAAJ,CAASC,cAAT,IAA2BJ,GAAG,CAACG,IAAJ,CAASE,eAArC,MAA0D,EADtM;;AAAA,iBAE1BH,QAF0B;AAAA;AAAA;AAAA;;AAGtBK,YAAAA,QAHsB,GAGXC,kBAASC,OAAT,CAAiBT,GAAG,CAACU,MAArB,EAA6BC,gBAAKC,KAAL,CAAWC,cAAxC,CAHW;;AAAA,iBAIxBN,QAJwB;AAAA;AAAA;AAAA;;AAK1BP,YAAAA,GAAG,CAACG,IAAJ,CAASW,MAAT,GAAkBP,QAAQ,CAACQ,EAA3B;;AACAP,8BAASQ,SAAT,CAAmBf,GAAnB,EAAwBU,gBAAKC,KAAL,CAAWC,cAAnC,EAAmDF,gBAAKC,KAAL,CAAWK,UAAX,CAAsBjB,GAAG,CAACG,IAA1B,CAAnD,EAAoF,qDAApF,EAA2II,QAAQ,CAACQ,EAApJ;;AAN0B;;AAAA;AAS5Bf,YAAAA,GAAG,CAACG,IAAJ,CAASW,MAAT,GAAkBH,gBAAKC,KAAL,CAAWC,cAAX,CAA0BK,MAA5C;;AACAV,8BAASW,SAAT,CAAmBlB,GAAnB,EAAwBU,gBAAKC,KAAL,CAAWC,cAAnC,EAAmDF,gBAAKC,KAAL,CAAWK,UAAX,CAAsBjB,GAAG,CAACG,IAA1B,CAAnD,EAAoF,yDAApF;;AAV4B;;AAAA;AAa9BK,8BAASY,UAAT,CAAoBpB,GAAG,CAACG,IAAJ,CAASC,cAA7B,EAA6CJ,GAAG,CAACG,IAAJ,CAASE,eAAtD,EAAuE,kBAAvE,EAA2F,mBAA3F,EAAgHG,kBAASa,gBAAT,CAA0B,mBAA1B,CAAhH,EAAgKpB,GAAhK;;AAb8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA;;eAgBeH,eAAUC,mB","sourcesContent":["import data from '../models';\nimport services from '../services';\n// @ts-ignore\nimport bookAMeal from './index';\n\nbookAMeal.updateOneMealOption = async (req, res) => {\n  const testMeal = (req.body.mealOptionName && req.body.mealOptionPrice && (/^[A-Za-z]+$/).test(req.body.mealOptionName) && (/^[0-9]+$/).test(req.body.mealOptionPrice)) && (req.body.mealOptionName && req.body.mealOptionPrice) !== '';\n  if (testMeal) {\n    const findMeal = services.findOne(req.params, data.meals.mealOptionList);\n    if (findMeal) {\n      req.body.mealId = findMeal.id;\n      services.updateOne(res, data.meals.mealOptionList, data.meals.mealFormat(req.body), 'Meal option found! Meal option successfully updated', findMeal.id);\n      return;\n    }\n    req.body.mealId = data.meals.mealOptionList.length;\n    services.createOne(res, data.meals.mealOptionList, data.meals.mealFormat(req.body), 'Meal option not found! Meal option successfully created');\n    return;\n  }\n  services.processErr(req.body.mealOptionName, req.body.mealOptionPrice, 'Meal option name', 'Meal option price', services.mustBeNumbersErr('Meal option price'), res);\n};\n\nexport default bookAMeal.updateOneMealOption;\n"],"file":"updateMeal.js"}