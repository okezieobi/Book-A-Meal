{"version":3,"sources":["../../controllers/updateMeal.js"],"names":["bookAMeal","updateOneMealOption","req","res","body","mealOptionName","mealOptionPrice","test","findMeal","services","findOne","params","data","meals","mealOptionList","updateOne","mealFormat","id","createOne","mealId","processErr","mustBeNumbersErr"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEAA,eAAUC,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgC,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC1B,CAACD,GAAG,CAACE,IAAJ,CAASC,cAAT,IAA2BH,GAAG,CAACE,IAAJ,CAASE,eAApC,IAAwD,aAAD,CAAgBC,IAAhB,CAAqBL,GAAG,CAACE,IAAJ,CAASC,cAA9B,CAAvD,IAAyG,UAAD,CAAaE,IAAb,CAAkBL,GAAG,CAACE,IAAJ,CAASE,eAA3B,CAAzG,MAA0J,IAA1J,IAAkK,CAACJ,GAAG,CAACE,IAAJ,CAASC,cAAT,IAA2BH,GAAG,CAACE,IAAJ,CAASE,eAArC,MAA0D,EADlM;AAAA;AAAA;AAAA;;AAEtBE,YAAAA,QAFsB,GAEXC,kBAASC,OAAT,CAAiBR,GAAG,CAACS,MAArB,EAA6BC,gBAAKC,KAAL,CAAWC,cAAxC,CAFW;;AAAA,iBAGxBN,QAHwB;AAAA;AAAA;AAAA;;AAI1BC,8BAASM,SAAT,CAAmBZ,GAAnB,EAAwBS,gBAAKC,KAAL,CAAWC,cAAnC,EAAmDF,gBAAKC,KAAL,CAAWG,UAAX,CAAsBd,GAAG,CAACE,IAA1B,CAAnD,EAAoF,qDAApF,EAA2II,QAAQ,CAACS,EAApJ;;AAJ0B;;AAAA;AAO5BR,8BAASS,SAAT,CAAmBf,GAAnB,EAAwBS,gBAAKC,KAAL,CAAWC,cAAnC,EAAmDF,gBAAKC,KAAL,CAAWG,UAAX,CAAsBd,GAAG,CAACE,IAA1B,CAAnD,EAAoF,yDAApF,EAA+IF,GAAG,CAACE,IAAJ,CAASe,MAAxJ;;AAP4B;;AAAA;AAU9BV,8BAASW,UAAT,CAAoBlB,GAAG,CAACE,IAAJ,CAASC,cAA7B,EAA6CH,GAAG,CAACE,IAAJ,CAASE,eAAtD,EAAuE,kBAAvE,EAA2F,mBAA3F,EAAgHG,kBAASY,gBAAT,CAA0B,mBAA1B,CAAhH,EAAgKlB,GAAhK;;AAV8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA;;eAaeH,eAAUC,mB","sourcesContent":["import data from '../models';\nimport services from '../services';\n// @ts-ignore\nimport bookAMeal from './index';\n\nbookAMeal.updateOneMealOption = async (req, res) => {\n  if ((req.body.mealOptionName && req.body.mealOptionPrice && (/^[A-Za-z]+$/).test(req.body.mealOptionName) && (/^[0-9]+$/).test(req.body.mealOptionPrice)) === true && (req.body.mealOptionName && req.body.mealOptionPrice) !== '') {\n    const findMeal = services.findOne(req.params, data.meals.mealOptionList);\n    if (findMeal) {\n      services.updateOne(res, data.meals.mealOptionList, data.meals.mealFormat(req.body), 'Meal option found! Meal option successfully updated', findMeal.id);\n      return;\n    }\n    services.createOne(res, data.meals.mealOptionList, data.meals.mealFormat(req.body), 'Meal option not found! Meal option successfully created', req.body.mealId);\n    return;\n  }\n  services.processErr(req.body.mealOptionName, req.body.mealOptionPrice, 'Meal option name', 'Meal option price', services.mustBeNumbersErr('Meal option price'), res);\n};\n\nexport default bookAMeal.updateOneMealOption;\n"],"file":"updateMeal.js"}