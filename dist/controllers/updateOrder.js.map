{"version":3,"sources":["../../controllers/updateOrder.js"],"names":["bookAMeal","updateOrder","req","res","testUpdateOrder","services","testItem","body","customerName","menuList","test","findOrder","findOne","params","data","orderList","resAction","updateOneRes","orderFormat","id","createOneRes","processErr400","stringToArrayErr"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEAA,eAAUC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,YAAAA,eADgB,GACEC,kBAASC,QAAT,CAAkBJ,GAAG,CAACK,IAAJ,CAASC,YAA3B,EAAyCN,GAAG,CAACK,IAAJ,CAASE,QAAlD,EAA6D,aAAD,CAAgBC,IAAhB,CAAqBR,GAAG,CAACK,IAAJ,CAASC,YAA9B,CAA5D,EAA0G,eAAD,CAAkBE,IAAlB,CAAuBR,GAAG,CAACK,IAAJ,CAASE,QAAhC,CAAzG,CADF;;AAAA,iBAElBL,eAFkB;AAAA;AAAA;AAAA;;AAGdO,YAAAA,SAHc,GAGFN,kBAASO,OAAT,CAAiBV,GAAG,CAACW,MAArB,EAA6BC,gBAAKC,SAAlC,CAHE;;AAAA,iBAIhBJ,SAJgB;AAAA;AAAA;AAAA;;AAKlBN,8BAASW,SAAT,CAAmB,GAAnB,EAAwBb,GAAxB,EAA6B,mDAA7B,EAAkFE,kBAASY,YAAT,CAAsBH,gBAAKC,SAA3B,EAAsCD,gBAAKI,WAAL,CAAiBhB,GAAG,CAACK,IAArB,CAAtC,EAAkEI,SAAS,CAACQ,EAA5E,CAAlF;;AALkB;;AAAA;AAQpBd,8BAASW,SAAT,CAAmB,GAAnB,EAAwBb,GAAxB,EAA6B,uDAA7B,EAAsFE,kBAASe,YAAT,CAAsBN,gBAAKC,SAA3B,EAAsCD,gBAAKI,WAAL,CAAiBhB,GAAG,CAACK,IAArB,CAAtC,CAAtF;;AARoB;;AAAA;AAWtBF,8BAASgB,aAAT,CAAuBnB,GAAG,CAACK,IAAJ,CAASC,YAAhC,EAA8CN,GAAG,CAACK,IAAJ,CAASE,QAAvD,EAAiE,eAAjE,EAAkF,WAAlF,EAA+FJ,kBAASiB,gBAAT,CAA0B,WAA1B,CAA/F,EAAuInB,GAAvI;;AAXsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;eAceH,eAAUC,W","sourcesContent":["import data from '../models';\nimport services from '../services';\n// @ts-ignore\nimport bookAMeal from './index';\n\nbookAMeal.updateOrder = async (req, res) => {\n  const testUpdateOrder = services.testItem(req.body.customerName, req.body.menuList, (/^[A-Za-z]+$/).test(req.body.customerName), (/^[A-Za-z\\s]+$/).test(req.body.menuList));\n  if (testUpdateOrder) {\n    const findOrder = services.findOne(req.params, data.orderList);\n    if (findOrder) {\n      services.resAction(200, res, 'Menu order found, menu order successfully updated', services.updateOneRes(data.orderList, data.orderFormat(req.body), findOrder.id));\n      return;\n    }\n    services.resAction(201, res, 'Menu order not found, menu order successfully created', services.createOneRes(data.orderList, data.orderFormat(req.body)));\n    return;\n  }\n  services.processErr400(req.body.customerName, req.body.menuList, 'Customer name', 'Menu list', services.stringToArrayErr('Menu list'), res);\n};\n\nexport default bookAMeal.updateOrder;\n"],"file":"updateOrder.js"}