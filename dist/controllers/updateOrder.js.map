{"version":3,"sources":["../../controllers/updateOrder.js"],"names":["bookAMeal","updateOrder","req","res","testUpdateOrder","services","testItem","body","customerName","menuList","test","findOrder","findOne","params","data","orderList","orderId","id","updateOne","orderFormat","length","createOne","processErr","stringToArrayErr"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEAA,eAAUC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,YAAAA,eADgB,GACEC,kBAASC,QAAT,CAAkBJ,GAAG,CAACK,IAAJ,CAASC,YAA3B,EAAyCN,GAAG,CAACK,IAAJ,CAASE,QAAlD,EAA6D,aAAD,CAAgBC,IAAhB,CAAqBR,GAAG,CAACK,IAAJ,CAASC,YAA9B,CAA5D,EAA0G,eAAD,CAAkBE,IAAlB,CAAuBR,GAAG,CAACK,IAAJ,CAASE,QAAhC,CAAzG,CADF;;AAAA,iBAElBL,eAFkB;AAAA;AAAA;AAAA;;AAGdO,YAAAA,SAHc,GAGFN,kBAASO,OAAT,CAAiBV,GAAG,CAACW,MAArB,EAA6BC,gBAAKC,SAAlC,CAHE;;AAAA,iBAIhBJ,SAJgB;AAAA;AAAA;AAAA;;AAKlBT,YAAAA,GAAG,CAACK,IAAJ,CAASS,OAAT,GAAmBL,SAAS,CAACM,EAA7B;;AACAZ,8BAASa,SAAT,CAAmBf,GAAnB,EAAwBW,gBAAKC,SAA7B,EAAwCD,gBAAKK,WAAL,CAAiBjB,GAAG,CAACK,IAArB,CAAxC,EAAoE,mDAApE,EAAyHI,SAAS,CAACM,EAAnI;;AANkB;;AAAA;AASpBf,YAAAA,GAAG,CAACK,IAAJ,CAASS,OAAT,GAAmBF,gBAAKC,SAAL,CAAeK,MAAlC;;AACAf,8BAASgB,SAAT,CAAmBlB,GAAnB,EAAwBW,gBAAKC,SAA7B,EAAwCD,gBAAKK,WAAL,CAAiBjB,GAAG,CAACK,IAArB,CAAxC,EAAoE,uDAApE;;AAVoB;;AAAA;AAatBF,8BAASiB,UAAT,CAAoBpB,GAAG,CAACK,IAAJ,CAASC,YAA7B,EAA2CN,GAAG,CAACK,IAAJ,CAASE,QAApD,EAA8D,eAA9D,EAA+E,WAA/E,EAA4FJ,kBAASkB,gBAAT,CAA0B,WAA1B,CAA5F,EAAoIpB,GAApI;;AAbsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;eAgBeH,eAAUC,W","sourcesContent":["import data from '../models';\nimport services from '../services';\n// @ts-ignore\nimport bookAMeal from './index';\n\nbookAMeal.updateOrder = async (req, res) => {\n  const testUpdateOrder = services.testItem(req.body.customerName, req.body.menuList, (/^[A-Za-z]+$/).test(req.body.customerName), (/^[A-Za-z\\s]+$/).test(req.body.menuList));\n  if (testUpdateOrder) {\n    const findOrder = services.findOne(req.params, data.orderList);\n    if (findOrder) {\n      req.body.orderId = findOrder.id;\n      services.updateOne(res, data.orderList, data.orderFormat(req.body), 'Menu order found, menu order successfully updated', findOrder.id);\n      return;\n    }\n    req.body.orderId = data.orderList.length;\n    services.createOne(res, data.orderList, data.orderFormat(req.body), 'Menu order not found, menu order successfully created');\n    return;\n  }\n  services.processErr(req.body.customerName, req.body.menuList, 'Customer name', 'Menu list', services.stringToArrayErr('Menu list'), res);\n};\n\nexport default bookAMeal.updateOrder;\n"],"file":"updateOrder.js"}