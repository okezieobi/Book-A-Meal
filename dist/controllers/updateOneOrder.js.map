{"version":3,"sources":["../../controllers/updateOneOrder.js"],"names":["bookAMeal","updateOneOrder","req","res","body","customerName","status","send","services","requiredNameErr","test","mustBeLettersErr","menuList","stringToArrayErr","findOrder","findOne","params","data","orders","orderList","orderId","length","createOne","orderFormat","id","updateOne"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEAA,eAAUC,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA2B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEvB,gBAAI,CAACD,GAAG,CAACE,IAAJ,CAASC,YAAV,IAA0BH,GAAG,CAACE,IAAJ,CAASC,YAAT,KAA0B,EAAxD,EAA4D;AAC1DF,cAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,kBAASC,eAAT,CAAyB,eAAzB,CAArB;AACD,aAFD,MAEO,IAAK,aAAD,CAAgBC,IAAhB,CAAqBR,GAAG,CAACE,IAAJ,CAASC,YAA9B,MAAgD,KAApD,EAA2D;AAChEF,cAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,kBAASG,gBAAT,CAA0B,eAA1B,CAArB;AACD,aAFM,MAEA,IAAI,CAACT,GAAG,CAACE,IAAJ,CAASQ,QAAV,IAAsBV,GAAG,CAACE,IAAJ,CAASQ,QAAT,KAAsB,EAAhD,EAAoD;AACzDT,cAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,kBAASC,eAAT,CAAyB,WAAzB,CAArB;AACD,aAFM,MAEA,IAAK,eAAD,CAAkBC,IAAlB,CAAuBR,GAAG,CAACE,IAAJ,CAASQ,QAAhC,MAA8C,KAAlD,EAAyD;AAC9DT,cAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,kBAASK,gBAAT,CAA0B,WAA1B,CAArB;AACD,aAFM,MAEA;AACCC,cAAAA,SADD,GACaN,kBAASO,OAAT,CAAiBb,GAAG,CAACc,MAArB,EAA6BC,gBAAKC,MAAL,CAAYC,SAAzC,CADb;;AAEL,kBAAI,CAACL,SAAL,EAAgB;AACdZ,gBAAAA,GAAG,CAACE,IAAJ,CAASgB,OAAT,GAAmBH,gBAAKC,MAAL,CAAYC,SAAZ,CAAsBE,MAAzC;;AACAb,kCAASc,SAAT,CAAmBnB,GAAnB,EAAwBc,gBAAKC,MAAL,CAAYC,SAApC,EAA+CF,gBAAKC,MAAL,CAAYK,WAAZ,CAAwBrB,GAAG,CAACE,IAA5B,CAA/C,EAAkF,uDAAlF;AACD,eAHD,MAGO;AACLF,gBAAAA,GAAG,CAACE,IAAJ,CAASgB,OAAT,GAAmBN,SAAS,CAACU,EAA7B;;AACAhB,kCAASiB,SAAT,CAAmBtB,GAAnB,EAAwBc,gBAAKC,MAAL,CAAYC,SAApC,EAA+CF,gBAAKC,MAAL,CAAYK,WAAZ,CAAwBrB,GAAG,CAACE,IAA5B,CAA/C,EAAkF,mDAAlF;AACD;AACF;;AAnBsB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;eAyBeJ,eAAUC,c","sourcesContent":["import data from '../models';\nimport services from '../services';\n// @ts-ignore\nimport bookAMeal from './index';\n\nbookAMeal.updateOneOrder = async (req, res) => {\n  try {\n    if (!req.body.customerName || req.body.customerName === '') {\n      res.status(400).send(services.requiredNameErr('Customer name'));\n    } else if ((/^[A-Za-z]+$/).test(req.body.customerName) === false) {\n      res.status(400).send(services.mustBeLettersErr('Customer name'));\n    } else if (!req.body.menuList || req.body.menuList === '') {\n      res.status(400).send(services.requiredNameErr('Menu list'));\n    } else if ((/^[A-Za-z\\s]+$/).test(req.body.menuList) === false) {\n      res.status(400).send(services.stringToArrayErr('Menu list'));\n    } else {\n      const findOrder = services.findOne(req.params, data.orders.orderList);\n      if (!findOrder) {\n        req.body.orderId = data.orders.orderList.length;\n        services.createOne(res, data.orders.orderList, data.orders.orderFormat(req.body), 'Menu order not found, menu order successfully created');\n      } else {\n        req.body.orderId = findOrder.id;\n        services.updateOne(res, data.orders.orderList, data.orders.orderFormat(req.body), 'Menu order found, menu order successfully updated');\n      }\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport default bookAMeal.updateOneOrder;\n"],"file":"updateOneOrder.js"}