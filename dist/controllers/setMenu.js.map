{"version":3,"sources":["../../controllers/setMenu.js"],"names":["bookAMeal","setMenu","req","res","body","menuName","menuOptions","status","send","message","test","menuId","data","menus","menuList","length","menuFormat","createdMenu","push"],"mappings":";;;;;;AAAA;;;;AAEA;;;;;;;AADA;;;AAGAA,gBAAUC,OAAV;AAAA,qEAAoB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKZD,IAAIE,IALQ,EAGdC,QAHc,aAGdA,QAHc,EAIdC,WAJc,aAIdA,WAJc;;AAAA,kBAMZ,CAACD,QAAD,IAAaA,aAAa,EANd;AAAA;AAAA;AAAA;;AAOdF,gBAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,uBAAS;AADU,aAArB;AAPc;AAAA;;AAAA;AAAA,kBAUJ,aAAD,CAAgBC,IAAhB,CAAqBL,QAArB,MAAmC,KAV9B;AAAA;AAAA;AAAA;;AAWdF,gBAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,uBAAS;AADU,aAArB;AAXc;AAAA;;AAAA;AAAA,kBAcL,CAACH,WAAD,IAAgBA,gBAAgB,EAd3B;AAAA;AAAA;AAAA;;AAedH,gBAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,uBAAS;AADU,aAArB;AAfc;AAAA;;AAAA;AAAA,kBAkBJ,eAAD,CAAkBC,IAAlB,CAAuBJ,WAAvB,MAAwC,KAlBnC;AAAA;AAAA;AAAA;;AAmBdH,gBAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,uBAAS;AADU,aAArB;AAnBc;AAAA;;AAAA;AAuBdP,gBAAIE,IAAJ,CAASO,MAAT,GAAkBC,iBAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAAtC;AAvBc;AAAA,mBAwBYH,iBAAKC,KAAL,CAAWG,UAAX,CAAsBd,IAAIE,IAA1B,CAxBZ;;AAAA;AAwBRa,uBAxBQ;AAAA;AAAA,mBAyBRL,iBAAKC,KAAL,CAAWC,QAAX,CAAoBI,IAApB,CAAyBD,WAAzB,CAzBQ;;AAAA;AA0Bdd,gBAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,uBAAS,uBADU;AAEnBG,oBAAMK;AAFa,aAArB;;AA1Bc;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAAA;AAAA;AAAA;AAAA;;kBAoCejB,gBAAUC,O","file":"setMenu.js","sourcesContent":["import data from '../models';\n// @ts-ignore\nimport bookAMeal from './index';\n\nbookAMeal.setMenu = async (req, res) => {\n  try {\n    const {\n      menuName,\n      menuOptions,\n    } = req.body;\n    if (!menuName || menuName === '') {\n      res.status(400).send({\n        message: 'Fail! Menu name is required',\n      });\n    } else if ((/^[A-Za-z]+$/).test(menuName) === false) {\n      res.status(400).send({\n        message: 'Fail! Menu name must be letters with no spacing',\n      });\n    } else if (!menuOptions || menuOptions === '') {\n      res.status(400).send({\n        message: 'Fail! Menu options are required',\n      });\n    } else if ((/^[A-Za-z\\s]+$/).test(menuOptions) === false) {\n      res.status(400).send({\n        message: 'Fail! Menu options must be letters and seperated by spaces',\n      });\n    } else {\n      req.body.menuId = data.menus.menuList.length;\n      const createdMenu = await data.menus.menuFormat(req.body);\n      await data.menus.menuList.push(createdMenu);\n      res.status(201).send({\n        message: 'Success! Menu created',\n        data: createdMenu,\n      });\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport default bookAMeal.setMenu;\n"]}