{"version":3,"sources":["../../controllers/addOneMealOption.js"],"names":["logic","addOneMealOption","req","res","body","mealOptionName","mealOptionPrice","status","send","message","test","mealId","data","meals","mealOptionList","length","mealFormat","createdMealOption","push"],"mappings":";;;;;;;AAAA;;AAEA;;;;;;;;AAEAA,eAAMC,gBAAN;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKjBD,GAAG,CAACE,IALa,EAGnBC,cAHmB,aAGnBA,cAHmB,EAInBC,eAJmB,aAInBA,eAJmB;;AAAA,kBAMjB,CAACD,cAAD,IAAmBA,cAAc,KAAK,EANrB;AAAA;AAAA;AAAA;;AAOnBF,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,cAAAA,OAAO,EAAE;AADU,aAArB;AAPmB;AAAA;;AAAA;AAAA,kBAUT,aAAD,CAAgBC,IAAhB,CAAqBL,cAArB,MAAyC,KAV/B;AAAA;AAAA;AAAA;;AAWnBF,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,cAAAA,OAAO,EAAE;AADU,aAArB;AAXmB;AAAA;;AAAA;AAAA,kBAcV,CAACH,eAAD,IAAoBA,eAAe,KAAK,EAd9B;AAAA;AAAA;AAAA;;AAenBH,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,cAAAA,OAAO,EAAE;AADU,aAArB;AAfmB;AAAA;;AAAA;AAAA,kBAkBT,UAAD,CAAaC,IAAb,CAAkBJ,eAAlB,MAAuC,KAlB7B;AAAA;AAAA;AAAA;;AAmBnBH,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,cAAAA,OAAO,EAAE;AADU,aAArB;AAnBmB;AAAA;;AAAA;AAuBnBP,YAAAA,GAAG,CAACE,IAAJ,CAASO,MAAT,GAAkBC,gBAAKC,KAAL,CAAWC,cAAX,CAA0BC,MAA5C;AAvBmB;AAAA,mBAwBaH,gBAAKC,KAAL,CAAWG,UAAX,CAAsBd,GAAG,CAACE,IAA1B,CAxBb;;AAAA;AAwBba,YAAAA,iBAxBa;AAAA;AAAA,mBAyBbL,gBAAKC,KAAL,CAAWC,cAAX,CAA0BI,IAA1B,CAA+BD,iBAA/B,CAzBa;;AAAA;AA0BnBd,YAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,cAAAA,OAAO,EAAE,8BADU;AAEnBG,cAAAA,IAAI,EAAEK;AAFa,aAArB;;AA1BmB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;eAoCejB,eAAMC,gB","sourcesContent":["import data from '../models';\n// @ts-ignore\nimport logic from './index';\n\nlogic.addOneMealOption = async (req, res) => {\n  try {\n    const {\n      mealOptionName,\n      mealOptionPrice,\n    } = req.body;\n    if (!mealOptionName || mealOptionName === '') {\n      res.status(400).send({\n        message: 'Fail! Meal option name is required',\n      });\n    } else if ((/^[A-Za-z]+$/).test(mealOptionName) === false) {\n      res.status(400).send({\n        message: 'Fail! Meal option name must be letters',\n      });\n    } else if (!mealOptionPrice || mealOptionPrice === '') {\n      res.status(400).send({\n        message: 'Fail! Meal option price is required',\n      });\n    } else if ((/^[0-9]+$/).test(mealOptionPrice) === false) {\n      res.status(400).send({\n        message: 'Fail! Meal option price must be numbers',\n      });\n    } else {\n      req.body.mealId = data.meals.mealOptionList.length;\n      const createdMealOption = await data.meals.mealFormat(req.body);\n      await data.meals.mealOptionList.push(createdMealOption);\n      res.status(201).send({\n        message: 'Success! Meal option created',\n        data: createdMealOption,\n      });\n    }\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport default logic.addOneMealOption;\n"],"file":"addOneMealOption.js"}