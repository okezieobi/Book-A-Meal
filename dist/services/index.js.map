{"version":3,"sources":["../../services/index.js"],"names":["Services","dataRes","dataMessage","array","data","status","send","message","dataParams","arrayData","findItem","find","item","id","parseInt","dataOne","dataTwo","dataOneTest","dataTwoTest","testResult","dataFormat","createdItem","length","push","number","sendData","updateId","updatedItem","splice","deleteId","name","price","error","nameOne","nameTwo","dataTwoTestRes","resData","sendErr","requiredNameErr","test","mustBeLettersErr","services"],"mappings":"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","sourcesContent":["class Services {\n  async getAll(dataRes, dataMessage, array) {\n    this.data = array;\n    dataRes.status(200).send({\n      message: dataMessage,\n      data: this.data,\n    });\n  }\n\n  findOne(dataParams, arrayData) {\n    this.findItem = arrayData.find(item => item.id === parseInt(dataParams.id, 10));\n    return this.findItem;\n  }\n\n  testItem(dataOne, dataTwo, dataOneTest, dataTwoTest) {\n    this.testResult = (dataOne && dataTwo && dataOneTest && dataTwoTest) === true;\n    return this.testResult;\n  }\n\n  createOneRes(arrayData, dataFormat) {\n    this.createdItem = dataFormat;\n    this.createdItem.id = arrayData.length;\n    arrayData.push(this.createdItem);\n    return this.createdItem;\n  }\n\n  resAction(number, dataRes, dataMessage, sendData) {\n    this.number = number;\n    dataRes.status(this.number).send({\n      message: dataMessage,\n      data: sendData,\n    });\n  }\n\n  updateOneRes(arrayData, dataFormat, updateId) {\n    this.updatedItem = dataFormat;\n    this.updatedItem.id = updateId;\n    arrayData.splice(updateId, 1, this.updatedItem);\n    return this.updatedItem;\n  }\n\n  async deleteOne(dataRes, arrayData, deleteId) {\n    this.id = deleteId;\n    await arrayData.splice(this.id, 1);\n    dataRes.status(204).send({});\n  }\n\n  requiredNameErr(name) {\n    this.message = {\n      message: `Fail! ${name} is required`,\n    };\n    return this.message;\n  }\n\n  mustBeLettersErr(name) {\n    this.message = {\n      message: `Fail! ${name} must be letters`,\n    };\n    return this.message;\n  }\n\n  mustBeNumbersErr(price) {\n    this.message = {\n      message: `Fail! ${price} must be numbers`,\n    };\n    return this.message;\n  }\n\n  stringToArrayErr(name) {\n    this.message = {\n      message: `Fail! ${name} must be letters and seperated by spaces`,\n    };\n    return this.message;\n  }\n\n  sendErr(number, message, dataRes) {\n    this.error = dataRes.status(number).send(message);\n    return this.error;\n  }\n\n  processErr400(dataOne, dataTwo, nameOne, nameTwo, dataTwoTestRes, resData) {\n    if (!dataOne) {\n      this.sendErr(400, this.requiredNameErr(nameOne), resData);\n      return;\n    }\n    if ((/^[A-Za-z]+$/).test(dataOne) === false) {\n      this.sendErr(400, this.mustBeLettersErr(nameOne), resData);\n      return;\n    }\n    if (!dataTwo) {\n      this.sendErr(400, this.requiredNameErr(nameTwo), resData);\n      return;\n    }\n    this.sendErr(400, dataTwoTestRes, resData);\n  }\n}\n\nconst services = new Services();\n\nexport default services;\n"],"file":"index.js"}