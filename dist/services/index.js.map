{"version":3,"sources":["../../services/index.js"],"names":["Services","dataRes","dataMessage","array","data","status","send","message","dataParams","arrayData","findItem","find","item","id","parseInt","dataFormat","createdItem","push","updateId","updatedItem","splice","deleteId","name","price","error","dataOne","dataTwo","nameOne","nameTwo","dataTwoTestRes","resData","sendErr400","requiredNameErr","test","mustBeLettersErr","services"],"mappings":"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","sourcesContent":["class Services {\n  async getAll(dataRes, dataMessage, array) {\n    this.data = array;\n    dataRes.status(200).send({\n      message: dataMessage,\n      data: this.data,\n    });\n  }\n\n  findOne(dataParams, arrayData) {\n    this.findItem = arrayData.find(item => item.id === parseInt(dataParams.id, 10));\n    return this.findItem;\n  }\n\n  async createOne(dataRes, arrayData, dataFormat, dataMessage) {\n    this.createdItem = await dataFormat;\n    await arrayData.push(this.createdItem);\n    dataRes.status(201).send({\n      message: dataMessage,\n      data: this.createdItem,\n    });\n  }\n\n  async updateOne(dataRes, arrayData, dataFormat, dataMessage, updateId) {\n    this.updatedItem = await dataFormat;\n    await arrayData.splice(updateId, 1, this.updatedItem);\n    dataRes.status(200).send({\n      message: dataMessage,\n      data: this.updatedItem,\n    });\n  }\n\n  async deleteOne(dataRes, arrayData, deleteId) {\n    this.id = deleteId;\n    await arrayData.splice(this.id, 1);\n    dataRes.status(204).send({});\n  }\n\n  requiredNameErr(name) {\n    this.message = {\n      message: `Fail! ${name} is required`,\n    };\n    return this.message;\n  }\n\n  mustBeLettersErr(name) {\n    this.message = {\n      message: `Fail! ${name} must be letters`,\n    };\n    return this.message;\n  }\n\n  mustBeNumbersErr(price) {\n    this.message = {\n      message: `Fail! ${price} must be numbers`,\n    };\n    return this.message;\n  }\n\n  stringToArrayErr(name) {\n    this.message = {\n      message: `Fail! ${name} must be letters and seperated by spaces`,\n    };\n    return this.message;\n  }\n\n  sendErr400(message, dataRes) {\n    this.error = dataRes.status(400).send(message);\n    return this.error;\n  }\n\n  processErr(dataOne, dataTwo, nameOne, nameTwo, dataTwoTestRes, resData) {\n    if (!dataOne || dataOne === '') {\n      this.sendErr400(this.requiredNameErr(nameOne), resData);\n      return;\n    }\n    if ((/^[A-Za-z]+$/).test(dataOne) === false) {\n      this.sendErr400(this.mustBeLettersErr(nameOne), resData);\n      return;\n    }\n    if (!dataTwo || dataTwo === '') {\n      this.sendErr400(this.requiredNameErr(nameTwo), resData);\n      return;\n    }\n    this.sendErr400(dataTwoTestRes, resData);\n  }\n}\n\nconst services = new Services();\n\nexport default services;\n"],"file":"index.js"}