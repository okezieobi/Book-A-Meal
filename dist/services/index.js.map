{"version":3,"sources":["../../services/index.js"],"names":["Services","dataRes","dataMessage","array","data","resAction","dataParams","arrayData","findItem","find","item","id","parseInt","dataOne","dataTwo","dataOneTest","dataTwoTest","testResult","dataFormat","createdItem","length","push","number","sendData","status","send","message","updateId","updatedItem","splice","deleteId","name","price","res","nameOne","nameTwo","dataTwoTestRes","reqErr","requiredNameErr","test","mustBeLettersErr","services"],"mappings":"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","sourcesContent":["class Services {\n  async getAll(dataRes, dataMessage, array) {\n    this.data = array;\n    this.resAction(200, dataRes, dataMessage, this.data);\n  }\n\n  findOne(dataParams, arrayData) {\n    this.findItem = arrayData.find(item => item.id === parseInt(dataParams.id, 10));\n    return this.findItem;\n  }\n\n  testItem(dataOne, dataTwo, dataOneTest, dataTwoTest) {\n    this.testResult = (dataOne && dataTwo && dataOneTest && dataTwoTest) === true;\n    return this.testResult;\n  }\n\n  createOneRes(arrayData, dataFormat) {\n    this.createdItem = dataFormat;\n    this.createdItem.id = arrayData.length;\n    arrayData.push(this.createdItem);\n    return this.createdItem;\n  }\n\n  resAction(number, dataRes, dataMessage, sendData) {\n    this.number = number;\n    dataRes.status(this.number).send({\n      message: dataMessage,\n      data: sendData,\n    });\n  }\n\n  updateOneRes(arrayData, dataFormat, updateId) {\n    this.updatedItem = dataFormat;\n    this.updatedItem.id = updateId;\n    arrayData.splice(updateId, 1, this.updatedItem);\n    return this.updatedItem;\n  }\n\n  deleteOne(dataRes, arrayData, deleteId) {\n    this.id = deleteId;\n    arrayData.splice(this.id, 1);\n    this.resAction(204, dataRes, false, false);\n  }\n\n  requiredNameErr(name) {\n    this.message = {\n      message: `Fail! ${name} is required`,\n    };\n    return this.message;\n  }\n\n  mustBeLettersErr(name) {\n    this.message = {\n      message: `Fail! ${name} must be letters`,\n    };\n    return this.message;\n  }\n\n  mustBeNumbersErr(price) {\n    this.message = {\n      message: `Fail! ${price} must be numbers`,\n    };\n    return this.message;\n  }\n\n  stringToArrayErr(name) {\n    this.message = {\n      message: `Fail! ${name} must be letters and seperated by spaces`,\n    };\n    return this.message;\n  }\n\n  sendErr(number, message, dataRes) {\n    this.res = dataRes;\n    this.res.status(number).send(message);\n  }\n\n  processErr400(dataOne, dataTwo, nameOne, nameTwo, dataTwoTestRes) {\n    if (!dataOne) {\n      this.reqErr = this.requiredNameErr(nameOne);\n      return this.reqErr;\n    }\n    if ((/^[A-Za-z]+$/).test(dataOne) === false) {\n      this.reqErr = this.mustBeLettersErr(nameOne);\n      return this.reqErr;\n    }\n    if (!dataTwo) {\n      this.reqErr = this.requiredNameErr(nameTwo);\n      return this.reqErr;\n    }\n\n    this.reqErr = dataTwoTestRes;\n    return this.reqErr;\n  }\n}\n\nconst services = new Services();\n\nexport default services;\n"],"file":"index.js"}